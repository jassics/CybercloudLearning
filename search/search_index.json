{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Cybercloud Learnings Introduction Cybercloud Learning is trying to put simple yet practical contents which can be used by beginners or experienced professionals as a revision or skills update. The goal is to share the knowledge with the cloud and cybersecurity community to better understand offensive and defensive approach on cloud native technologies. All content on this site is developed by volunteers like us. If you'd like to be one of them, you can contribute your knowledge by submitting a Pull Request . We are open to content from any SMEs or educational institutes. Don't worry about submitting content in the wrong format or what section it should be a part of, we can always make improvements later :) When writing content: do try to credit the researcher who discovered it and link to their site/talk. Inspired by hackingthe.cloud Please note that we will not explain basics concept or non-security concepts in-depth because our main target is to make this website for security related skills required using other technologies like terraform, cloud etc. However, we wil make sure that we would cover minimal basic knowledge required to understand any concepts. Which tutorials we cover We cover topics related to Cloud Computing, DevSecOps and Cybersecurity as mentioned below: 1. Cloud Computing 1. Cloud Computing Fundamentals 2. AWS 3. GCP 4. Azure 2. Cloud Security 1. Cloud Security Basics 2. AWS Security 3. GCP Security 4. Azure Security 3. Containers and its security 1. Container Fundamentals 2. Docker 3. Docker Security 4. Kubernetes 5. Kubernetes Security 4. Cybersecurity 1. Web Security 2. API Security 3. Network Security 4. Application Security/Software Security 1. Secure Coding 2. Secure Code Review 3. Cryptography 5. DevOps 1. Understanding DevOps 2. Ansible 3. Terraform 4. CloudFormation 5. Pulumi 6. DevSecOps 1. DevSecOps Fundamentals 2. DevSecOps Maturity Model 3. SDL in CI/CD Pipeline 4. SCA in CI/CD Pipeline 5. DAST in CI/CD Pipeline 6. Compliance as a Code 7. Automated Vulnerability Management 7. GRC 1. Data Privacy 2. NIST RMF 3. NIST CSF 4. GDPR 5. PCIDSS 6. HIPAA 8. Python Track 1. Python Essentials 2. Python for AWS 3. Python for Cybersecurity 4. Python for Automation 5. Python for DevOps 9. Miscellaneous 1. Linux Commands 2. Vim for everyone 3. Regular Expression with Examples 10. Security Study Plan and Security Presentations It will cover common cybersecurity domains related study plans and presentations. Disclaimer The information here provided by Cybercloud Gurus is only for educational purpose. You should do labs and run commands etc. on your own cloud environment or local machine wherever you are authorized. Roadmap It's just the beginning and every week I will update more contents. Please check GitHub page for more information and instructions! Contributors Sanjeev Jaiswal You can help us to improve further if you find any discrepancies in existing content through an Issue or submit the new content through a Pull Request (PR) . It can't be better when developed by a community builder. If you are willing to contribute, don't hesitate and let's start helping the community. It can be even a suggestion, writing only on one topic or a coe snippet, screenshots etc. or even something typo! Quality Content is our motto! The content on this site is generated by SMEs like you who share Cybercloud and security knowledge with us. Are you familiar with any of these topics or technologies and want to join as a contributor?","title":"Home"},{"location":"#welcome-to-cybercloud-learnings","text":"","title":"Welcome to Cybercloud Learnings"},{"location":"#introduction","text":"Cybercloud Learning is trying to put simple yet practical contents which can be used by beginners or experienced professionals as a revision or skills update. The goal is to share the knowledge with the cloud and cybersecurity community to better understand offensive and defensive approach on cloud native technologies. All content on this site is developed by volunteers like us. If you'd like to be one of them, you can contribute your knowledge by submitting a Pull Request . We are open to content from any SMEs or educational institutes. Don't worry about submitting content in the wrong format or what section it should be a part of, we can always make improvements later :) When writing content: do try to credit the researcher who discovered it and link to their site/talk. Inspired by hackingthe.cloud Please note that we will not explain basics concept or non-security concepts in-depth because our main target is to make this website for security related skills required using other technologies like terraform, cloud etc. However, we wil make sure that we would cover minimal basic knowledge required to understand any concepts.","title":"Introduction"},{"location":"#which-tutorials-we-cover","text":"We cover topics related to Cloud Computing, DevSecOps and Cybersecurity as mentioned below:","title":"Which tutorials we cover"},{"location":"#1-cloud-computing","text":"1. Cloud Computing Fundamentals 2. AWS 3. GCP 4. Azure","title":"1. Cloud Computing"},{"location":"#2-cloud-security","text":"1. Cloud Security Basics 2. AWS Security 3. GCP Security 4. Azure Security","title":"2. Cloud Security"},{"location":"#3-containers-and-its-security","text":"1. Container Fundamentals 2. Docker 3. Docker Security 4. Kubernetes 5. Kubernetes Security","title":"3. Containers and its security"},{"location":"#4-cybersecurity","text":"1. Web Security 2. API Security 3. Network Security 4. Application Security/Software Security 1. Secure Coding 2. Secure Code Review 3. Cryptography","title":"4. Cybersecurity"},{"location":"#5-devops","text":"1. Understanding DevOps 2. Ansible 3. Terraform 4. CloudFormation 5. Pulumi","title":"5. DevOps"},{"location":"#6-devsecops","text":"1. DevSecOps Fundamentals 2. DevSecOps Maturity Model 3. SDL in CI/CD Pipeline 4. SCA in CI/CD Pipeline 5. DAST in CI/CD Pipeline 6. Compliance as a Code 7. Automated Vulnerability Management","title":"6. DevSecOps"},{"location":"#7-grc","text":"1. Data Privacy 2. NIST RMF 3. NIST CSF 4. GDPR 5. PCIDSS 6. HIPAA","title":"7. GRC"},{"location":"#8-python-track","text":"1. Python Essentials 2. Python for AWS 3. Python for Cybersecurity 4. Python for Automation 5. Python for DevOps","title":"8. Python Track"},{"location":"#9-miscellaneous","text":"1. Linux Commands 2. Vim for everyone 3. Regular Expression with Examples","title":"9. Miscellaneous"},{"location":"#10-security-study-plan-and-security-presentations","text":"It will cover common cybersecurity domains related study plans and presentations.","title":"10. Security Study Plan and Security Presentations"},{"location":"#disclaimer","text":"The information here provided by Cybercloud Gurus is only for educational purpose. You should do labs and run commands etc. on your own cloud environment or local machine wherever you are authorized.","title":"Disclaimer"},{"location":"#roadmap","text":"It's just the beginning and every week I will update more contents. Please check GitHub page for more information and instructions!","title":"Roadmap"},{"location":"#contributors","text":"Sanjeev Jaiswal You can help us to improve further if you find any discrepancies in existing content through an Issue or submit the new content through a Pull Request (PR) . It can't be better when developed by a community builder. If you are willing to contribute, don't hesitate and let's start helping the community. It can be even a suggestion, writing only on one topic or a coe snippet, screenshots etc. or even something typo! Quality Content is our motto! The content on this site is generated by SMEs like you who share Cybercloud and security knowledge with us. Are you familiar with any of these topics or technologies and want to join as a contributor?","title":"Contributors"},{"location":"cloud-computing/cloud-basics/","text":"Cloud Computing Essentials Before understanding what is Cloud Computing, let's try to understand 2 things: 1. What is on-prem or traditional computing solutions 2. Why do we need better solution then on-prem Now, Let's try to understand little deeper below things: What is Cloud Computing What are the advantages of Cloud Computing What are various Cloud Computing Service Model What are Cloud Computing Deployment Model Some famous CSPs (Cloud Service Providers) Basic Terminologies to understand in Cloud Computing domain Elasticity Autoscaling IAM uptime Data Availability Load Balancer API Gateway Pay as you go OpEx (Operating Expense) vs CapEx (CapitalExpense) Serverless Microservices","title":"Cloud Computing Essentials"},{"location":"cloud-computing/cloud-basics/#cloud-computing-essentials","text":"Before understanding what is Cloud Computing, let's try to understand 2 things:","title":"Cloud Computing Essentials"},{"location":"cloud-computing/cloud-basics/#1-what-is-on-prem-or-traditional-computing-solutions","text":"","title":"1. What is on-prem or traditional computing solutions"},{"location":"cloud-computing/cloud-basics/#2-why-do-we-need-better-solution-then-on-prem","text":"Now, Let's try to understand little deeper below things:","title":"2. Why do we need better solution then on-prem"},{"location":"cloud-computing/cloud-basics/#what-is-cloud-computing","text":"","title":"What is Cloud Computing"},{"location":"cloud-computing/cloud-basics/#what-are-the-advantages-of-cloud-computing","text":"","title":"What are the advantages of Cloud Computing"},{"location":"cloud-computing/cloud-basics/#what-are-various-cloud-computing-service-model","text":"","title":"What are various Cloud Computing Service Model"},{"location":"cloud-computing/cloud-basics/#what-are-cloud-computing-deployment-model","text":"","title":"What are Cloud Computing Deployment Model"},{"location":"cloud-computing/cloud-basics/#some-famous-csps-cloud-service-providers","text":"","title":"Some famous CSPs (Cloud Service Providers)"},{"location":"cloud-computing/cloud-basics/#basic-terminologies-to-understand-in-cloud-computing-domain","text":"","title":"Basic Terminologies to understand in Cloud Computing domain"},{"location":"cloud-computing/cloud-basics/#elasticity","text":"","title":"Elasticity"},{"location":"cloud-computing/cloud-basics/#autoscaling","text":"","title":"Autoscaling"},{"location":"cloud-computing/cloud-basics/#iam","text":"","title":"IAM"},{"location":"cloud-computing/cloud-basics/#uptime","text":"","title":"uptime"},{"location":"cloud-computing/cloud-basics/#data-availability","text":"","title":"Data Availability"},{"location":"cloud-computing/cloud-basics/#load-balancer","text":"","title":"Load Balancer"},{"location":"cloud-computing/cloud-basics/#api-gateway","text":"","title":"API Gateway"},{"location":"cloud-computing/cloud-basics/#pay-as-you-go","text":"","title":"Pay as you go"},{"location":"cloud-computing/cloud-basics/#opex-operating-expense-vs-capex-capitalexpense","text":"","title":"OpEx (Operating Expense) vs CapEx (CapitalExpense)"},{"location":"cloud-computing/cloud-basics/#serverless","text":"","title":"Serverless"},{"location":"cloud-computing/cloud-basics/#microservices","text":"","title":"Microservices"},{"location":"cloud-computing/learning-aws/","text":"Welcome to Learning AWS Page We will learn AWS basics step by step together. Stay tuned! AWS Overview What is an AWS What you can do with AWS What you cannot do with AWS What you will learn here We will not cover all AWS product and services, also it's not possible for any job criteria as well. Moreover, our website is dedicated to Cybersecurity domain rather than generic domain. So, we will explain be keeping security in mind always. Also, we will cover the essential services under below Product categories. Compute Storage Networking Database Analytics Containers Serverless Application Integration Management & Governance Security, Identity & Compliance","title":"AWS Overview"},{"location":"cloud-computing/learning-aws/#welcome-to-learning-aws-page","text":"We will learn AWS basics step by step together. Stay tuned!","title":"Welcome to Learning AWS Page"},{"location":"cloud-computing/learning-aws/#aws-overview","text":"","title":"AWS Overview"},{"location":"cloud-computing/learning-aws/#what-is-an-aws","text":"","title":"What is an AWS"},{"location":"cloud-computing/learning-aws/#what-you-can-do-with-aws","text":"","title":"What you can do with AWS"},{"location":"cloud-computing/learning-aws/#what-you-cannot-do-with-aws","text":"","title":"What you cannot do with AWS"},{"location":"cloud-computing/learning-aws/#what-you-will-learn-here","text":"We will not cover all AWS product and services, also it's not possible for any job criteria as well. Moreover, our website is dedicated to Cybersecurity domain rather than generic domain. So, we will explain be keeping security in mind always. Also, we will cover the essential services under below Product categories. Compute Storage Networking Database Analytics Containers Serverless Application Integration Management & Governance Security, Identity & Compliance","title":"What you will learn here"},{"location":"cloud-computing/learning-aws/analytics/","text":"","title":"Analytics Overview"},{"location":"cloud-computing/learning-aws/analytics/amazon-athena/","text":"","title":"Amazon Athena"},{"location":"cloud-computing/learning-aws/analytics/amazon-kinesis/","text":"","title":"Amazon Kinesis"},{"location":"cloud-computing/learning-aws/analytics/amazon-redshift/","text":"","title":"Amazon Redshift"},{"location":"cloud-computing/learning-aws/analytics/aws-glue/","text":"","title":"AWS Glue"},{"location":"cloud-computing/learning-aws/application-integration/","text":"","title":"Application Integration Overview"},{"location":"cloud-computing/learning-aws/application-integration/amazon-eventbridge/","text":"","title":"Amazon EventBridge"},{"location":"cloud-computing/learning-aws/application-integration/amazon-sns/","text":"","title":"Amazon SNS"},{"location":"cloud-computing/learning-aws/application-integration/amazon-sqs/","text":"","title":"Amazon SQS"},{"location":"cloud-computing/learning-aws/application-integration/aws-step-functions/","text":"","title":"AWS Step Functions"},{"location":"cloud-computing/learning-aws/compute/","text":"","title":"Compute Overview"},{"location":"cloud-computing/learning-aws/compute/amazon-ec2/","text":"","title":"Amazon EC2"},{"location":"cloud-computing/learning-aws/compute/amazon-lightsail/","text":"","title":"Amazon Lightsail"},{"location":"cloud-computing/learning-aws/compute/aws-auto-scaling/","text":"","title":"AWS Auto Scaling"},{"location":"cloud-computing/learning-aws/compute/aws-elastic-beanstalk/","text":"","title":"AWS Elastic Beanstalk"},{"location":"cloud-computing/learning-aws/compute/aws-lambda/","text":"","title":"AWS Lambda"},{"location":"cloud-computing/learning-aws/containers/","text":"","title":"Containers Overview"},{"location":"cloud-computing/learning-aws/containers/amazon-ecr/","text":"","title":"Amazon ECR"},{"location":"cloud-computing/learning-aws/containers/amazon-ecs/","text":"","title":"Amazon ECS"},{"location":"cloud-computing/learning-aws/containers/amazon-eks/","text":"","title":"Amazon EKS"},{"location":"cloud-computing/learning-aws/containers/aws-fargate/","text":"","title":"AWS Fargate"},{"location":"cloud-computing/learning-aws/database/","text":"","title":"Database Overview"},{"location":"cloud-computing/learning-aws/database/amazon-aurora/","text":"","title":"Amazon Aurora"},{"location":"cloud-computing/learning-aws/database/amazon-dynamodb/","text":"","title":"Amazon DynamoDB"},{"location":"cloud-computing/learning-aws/database/amazon-elasticache/","text":"","title":"Amazon Elasticache"},{"location":"cloud-computing/learning-aws/database/amazon-neptune/","text":"","title":"Amazon Neptune"},{"location":"cloud-computing/learning-aws/database/amazon-rds/","text":"","title":"Amazon RDS"},{"location":"cloud-computing/learning-aws/database/amazon-redshift/","text":"","title":"Amazon Redshift"},{"location":"cloud-computing/learning-aws/management-and-governance/","text":"","title":"Management and Governance Overview"},{"location":"cloud-computing/learning-aws/management-and-governance/amazon-cloudwatch/","text":"","title":"Amazon CloudWatch"},{"location":"cloud-computing/learning-aws/management-and-governance/aws-cloudtrail/","text":"","title":"AWS CloudTrail"},{"location":"cloud-computing/learning-aws/management-and-governance/aws-config/","text":"","title":"AWS Config"},{"location":"cloud-computing/learning-aws/management-and-governance/aws-organizations/","text":"","title":"AWS Organizations"},{"location":"cloud-computing/learning-aws/management-and-governance/aws-trusted-advisor/","text":"","title":"AWS Trusted Advisor"},{"location":"cloud-computing/learning-aws/networking/","text":"","title":"Networking Overview"},{"location":"cloud-computing/learning-aws/networking/amazon-api-gateway/","text":"","title":"Amazon API Gateway"},{"location":"cloud-computing/learning-aws/networking/amazon-cloudfront/","text":"","title":"Amazon CloudFront"},{"location":"cloud-computing/learning-aws/networking/amazon-route53/","text":"","title":"Amazon Route53"},{"location":"cloud-computing/learning-aws/networking/amazon-vpc/","text":"","title":"Amazon VPC"},{"location":"cloud-computing/learning-aws/networking/elb/","text":"","title":"Elastic Load Balancing"},{"location":"cloud-computing/learning-aws/security-identity-compliance/","text":"","title":"Security, Identity and Compliance Overview"},{"location":"cloud-computing/learning-aws/security-identity-compliance/amazon-cognito/","text":"","title":"Amazon Cognito"},{"location":"cloud-computing/learning-aws/security-identity-compliance/amazon-detective/","text":"","title":"Amazon Detective"},{"location":"cloud-computing/learning-aws/security-identity-compliance/amazon-guardduty/","text":"","title":"Amazon GuardDuty"},{"location":"cloud-computing/learning-aws/security-identity-compliance/amazon-inspector/","text":"","title":"Amazon Inspector"},{"location":"cloud-computing/learning-aws/security-identity-compliance/amazon-macie/","text":"","title":"Amazon Macie"},{"location":"cloud-computing/learning-aws/security-identity-compliance/aws-iam/","text":"AWS IAM (Identity and Access Management)","title":"AWS IAM"},{"location":"cloud-computing/learning-aws/security-identity-compliance/aws-iam/#aws-iam-identity-and-access-management","text":"","title":"AWS IAM (Identity and Access Management)"},{"location":"cloud-computing/learning-aws/security-identity-compliance/aws-kms/","text":"","title":"AWS KMS"},{"location":"cloud-computing/learning-aws/security-identity-compliance/aws-secrets-manager/","text":"","title":"AWS Secrets Manager"},{"location":"cloud-computing/learning-aws/security-identity-compliance/aws-security-hub/","text":"","title":"AWS Security Hub"},{"location":"cloud-computing/learning-aws/storage/","text":"","title":"Storage Overview"},{"location":"cloud-computing/learning-aws/storage/amazon-ebs/","text":"","title":"Amazon EBS"},{"location":"cloud-computing/learning-aws/storage/amazon-efs/","text":"","title":"Amazon EFS"},{"location":"cloud-computing/learning-aws/storage/amazon-s3/","text":"","title":"Amazon S3"},{"location":"cloud-computing/learning-azure/","text":"","title":"Azure Overview"},{"location":"cloud-computing/learning-gcp/","text":"","title":"GCP Overview"},{"location":"cloud-security/cloud-security-essentials/","text":"Cloud Security Fundamentals What is Cloud Security Why Cloud Security Now What is IAM What is Data Security","title":"Cloud Security Essentials"},{"location":"cloud-security/cloud-security-essentials/#cloud-security-fundamentals","text":"What is Cloud Security Why Cloud Security Now What is IAM What is Data Security","title":"Cloud Security Fundamentals"},{"location":"cloud-security/owasp-top10-cloud/","text":"","title":"OWASP Top 10 Cloud"},{"location":"cloud-security/learning-aws-security/aws-security-overview/","text":"","title":"AWS Security Overview"},{"location":"cloud-security/learning-aws-security/cloudtrail/","text":"","title":"Cloudtrail"},{"location":"cloud-security/learning-aws-security/guardduty/","text":"","title":"GuardDuty"},{"location":"cloud-security/learning-aws-security/iam-security/","text":"","title":"IAM Security"},{"location":"cloud-security/learning-aws-security/kms/","text":"","title":"KMS"},{"location":"cloud-security/learning-aws-security/s3-security/","text":"","title":"S3 Security"},{"location":"cloud-security/learning-azure-security/azure-security-overview/","text":"","title":"Azure Security Overview"},{"location":"cloud-security/learning-gcp-security/gcp-security-overview/","text":"","title":"GCP Security Overview"},{"location":"containers/container-overview/","text":"Containers Overview What are Containers? Containers are packages of software that contain all of the necessary elements to run in any environment. Containerization allows development teams to move fast, deploy software efficiently, and operate at an unprecedented scale. Containers are lightweight packages of your application code together with dependencies such as specific versions of programming language runtimes and libraries required to run your software services. Containers make it easy to share CPU, memory, storage, and network resources at the operating systems level and offer a logical packaging mechanism in which applications can be abstracted from the environment in which they actually run. What is Bare Metal? The term bare metal refers to the fact that there is no operating system between the virtualization software and the hardware. The virtualization software resides on the \u201cbare metal\u201d or the hard disk of the hardware, where the operating system is usually installed. Containers vs Virtual Machine You might already be familiar with VMs: a guest operating system such as Linux or Windows runs on top of a host operating system with access to the underlying hardware. Containers are often compared to virtual machines (VMs). Like virtual machines, containers allow you to package your application together with libraries and other dependencies, providing isolated environments for running your software services. As you\u2019ll see below, however, the similarities end here as containers offer a far more lightweight unit for developers and IT Ops teams to work with, carrying a myriad of benefits. Containers are much more lightweight than VMs Containers virtualize at the OS level while VMs virtualize at the hardware level Containers share the OS kernel and use a fraction of the memory VMs require Below image explains Bare Metal vs Virtual Machine vs Container: Benefits of using Containers Separation of responsibility Containerization provides a clear separation of responsibility, as developers focus on application logic and dependencies, while IT operations teams can focus on deployment and management instead of application details such as specific software versions and configurations. Workload portability Containers can run virtually anywhere, greatly easing development and deployment: on Linux, Windows, and Mac operating systems; on virtual machines or on physical servers; on a developer\u2019s machine or in data centers on-premises; and of course, in the public cloud. Application isolation Containers virtualize CPU, memory, storage, and network resources at the operating system level, providing developers with a view of the OS logically isolated from other applications. Agile development Containers allow your developers to move much more quickly by avoiding concerns about dependencies and environments. Efficient operations Containers are lightweight and allow you to use just the computing resources you need. This lets you run your applications efficiently. Run anywhere Containers are able to run virtually anywhere. Wherever you want to run your software, you can use containers. Container use cases Common ways organizations use containers include: \"Lift and shift\" existing applications into modern cloud architectures Some organizations use containers to migrate existing applications into more modern environments. While this practice delivers some of the basic benefits of operating system virtualization, it does not offer the full benefits of a modular, container-based application architecture. Refactor existing applications for containers Although refactoring is much more intensive than lift-and-shift migration, it enables the full benefits of a container environment. Develop new container-native applications Much like refactoring, this approach unlocks the full benefits of containers. Provide better support for microservices architectures Distributed applications and microservices can be more easily isolated, deployed, and scaled using individual container building blocks. Provide DevOps support for continuous integration and deployment (CI/CD) Container technology supports streamlined build, test, and deployment from the same container images. Provide easier deployment of repetitive jobs and tasks Containers are being deployed to support one or more similar processes, which often run in the background, such as ETL functions or batch jobs. What are some examples of containers Some examples include: Container Linux (formerly CoreOS Linux) \u2014 one of the first lightweight container operating systems built for containers. RancherOS \u2014 a simplified Linux distribution built from containers, specifically for running containers Docker - The first and still most popular container technology, Docker's open-source containerization engine works with most of the products that follow, as well as many open-source tools. How do docker and Kubernetes relate to containers? Users involved in container environments are likely to hear about two popular tools and platforms used to build and manage containers. These are Docker and Kubernetes. Docker is a popular runtime environment used to create and build software inside containers. It uses Docker images (copy-on-write snapshots) to deploy containerized applications or software in multiple environments, from development to test and production. Docker was built on open standards and functions inside most common operating environments, including Linux, Microsoft Windows, and other on-premises or cloud-based infrastructures. Containerized applications can get complicated, however. When in production, many might require hundreds to thousands of separate containers in production. This is where container runtime environments such as Docker benefit from the use of other tools to orchestrate or manage all the containers in operation. One of the most popular tools for this purpose is Kubernetes, a container orchestrator that recognizes multiple container runtime environments, including Docker. Kubernetes orchestrates the operation of multiple containers in harmony together. It manages areas like the use of underlying infrastructure resources for containerized applications such as the amount of compute, network, and storage resources required. Orchestration tools like Kubernetes make it easier to automate and scale container-based workloads for live production environments. Credits/References Google Cloud for Containers NetAPP DevOps CNCF: Cloud Native Computing Foundation vmware.com Container Journal","title":"Container Overview"},{"location":"containers/container-overview/#containers-overview","text":"","title":"Containers Overview"},{"location":"containers/container-overview/#what-are-containers","text":"Containers are packages of software that contain all of the necessary elements to run in any environment. Containerization allows development teams to move fast, deploy software efficiently, and operate at an unprecedented scale. Containers are lightweight packages of your application code together with dependencies such as specific versions of programming language runtimes and libraries required to run your software services. Containers make it easy to share CPU, memory, storage, and network resources at the operating systems level and offer a logical packaging mechanism in which applications can be abstracted from the environment in which they actually run.","title":"What are Containers?"},{"location":"containers/container-overview/#what-is-bare-metal","text":"The term bare metal refers to the fact that there is no operating system between the virtualization software and the hardware. The virtualization software resides on the \u201cbare metal\u201d or the hard disk of the hardware, where the operating system is usually installed.","title":"What is Bare Metal?"},{"location":"containers/container-overview/#containers-vs-virtual-machine","text":"You might already be familiar with VMs: a guest operating system such as Linux or Windows runs on top of a host operating system with access to the underlying hardware. Containers are often compared to virtual machines (VMs). Like virtual machines, containers allow you to package your application together with libraries and other dependencies, providing isolated environments for running your software services. As you\u2019ll see below, however, the similarities end here as containers offer a far more lightweight unit for developers and IT Ops teams to work with, carrying a myriad of benefits. Containers are much more lightweight than VMs Containers virtualize at the OS level while VMs virtualize at the hardware level Containers share the OS kernel and use a fraction of the memory VMs require Below image explains Bare Metal vs Virtual Machine vs Container:","title":"Containers vs Virtual Machine"},{"location":"containers/container-overview/#benefits-of-using-containers","text":"Separation of responsibility Containerization provides a clear separation of responsibility, as developers focus on application logic and dependencies, while IT operations teams can focus on deployment and management instead of application details such as specific software versions and configurations. Workload portability Containers can run virtually anywhere, greatly easing development and deployment: on Linux, Windows, and Mac operating systems; on virtual machines or on physical servers; on a developer\u2019s machine or in data centers on-premises; and of course, in the public cloud. Application isolation Containers virtualize CPU, memory, storage, and network resources at the operating system level, providing developers with a view of the OS logically isolated from other applications. Agile development Containers allow your developers to move much more quickly by avoiding concerns about dependencies and environments. Efficient operations Containers are lightweight and allow you to use just the computing resources you need. This lets you run your applications efficiently. Run anywhere Containers are able to run virtually anywhere. Wherever you want to run your software, you can use containers.","title":"Benefits of using Containers"},{"location":"containers/container-overview/#container-use-cases","text":"Common ways organizations use containers include: \"Lift and shift\" existing applications into modern cloud architectures Some organizations use containers to migrate existing applications into more modern environments. While this practice delivers some of the basic benefits of operating system virtualization, it does not offer the full benefits of a modular, container-based application architecture. Refactor existing applications for containers Although refactoring is much more intensive than lift-and-shift migration, it enables the full benefits of a container environment. Develop new container-native applications Much like refactoring, this approach unlocks the full benefits of containers. Provide better support for microservices architectures Distributed applications and microservices can be more easily isolated, deployed, and scaled using individual container building blocks. Provide DevOps support for continuous integration and deployment (CI/CD) Container technology supports streamlined build, test, and deployment from the same container images. Provide easier deployment of repetitive jobs and tasks Containers are being deployed to support one or more similar processes, which often run in the background, such as ETL functions or batch jobs.","title":"Container use cases"},{"location":"containers/container-overview/#what-are-some-examples-of-containers","text":"Some examples include: Container Linux (formerly CoreOS Linux) \u2014 one of the first lightweight container operating systems built for containers. RancherOS \u2014 a simplified Linux distribution built from containers, specifically for running containers Docker - The first and still most popular container technology, Docker's open-source containerization engine works with most of the products that follow, as well as many open-source tools.","title":"What are some examples of containers"},{"location":"containers/container-overview/#how-do-docker-and-kubernetes-relate-to-containers","text":"Users involved in container environments are likely to hear about two popular tools and platforms used to build and manage containers. These are Docker and Kubernetes. Docker is a popular runtime environment used to create and build software inside containers. It uses Docker images (copy-on-write snapshots) to deploy containerized applications or software in multiple environments, from development to test and production. Docker was built on open standards and functions inside most common operating environments, including Linux, Microsoft Windows, and other on-premises or cloud-based infrastructures. Containerized applications can get complicated, however. When in production, many might require hundreds to thousands of separate containers in production. This is where container runtime environments such as Docker benefit from the use of other tools to orchestrate or manage all the containers in operation. One of the most popular tools for this purpose is Kubernetes, a container orchestrator that recognizes multiple container runtime environments, including Docker. Kubernetes orchestrates the operation of multiple containers in harmony together. It manages areas like the use of underlying infrastructure resources for containerized applications such as the amount of compute, network, and storage resources required. Orchestration tools like Kubernetes make it easier to automate and scale container-based workloads for live production environments.","title":"How do docker and Kubernetes relate to containers?"},{"location":"containers/container-overview/#creditsreferences","text":"Google Cloud for Containers NetAPP DevOps CNCF: Cloud Native Computing Foundation vmware.com Container Journal","title":"Credits/References"},{"location":"containers/docker-security/","text":"","title":"Docker Security"},{"location":"containers/kubernetes-security/","text":"","title":"Kubernetes Security"},{"location":"containers/kubernetes/","text":"","title":"Kubernetes"},{"location":"containers/docker/docker-introduction/","text":"Docker What is Docker Docker is a standalone software that can be installed on any computer to run containerized applications When we talk about Docker, its mostly we talk about Docker Engine. Docker has two main editions: Enterprise Edition (EE) Community Edition (CE) Docker has an open-source project called \"Moby\" to enable and accelerate software containerization.It's source code is available at github History of Docker Company It's based out of San Francisco It was founded by Solomon Hykes Started as a PaaS provider called as dotCloud That time it leverages Linux Containers The internal tool that was used to manage containers was named as Docker And dotCloud was rebranded as Docker in 2013 Docker Images vs Containers Docker images are read-only templates used to build containers. Containers are deployed instances created from those templates. Images and containers are closely related, and are essential in powering the Docker software platform. Docker Use Cases Dev/Prod Parity: When you want the code, environment, software version(s) everything same at both dev and prod Avoid Configuration headache Code Pipeline Management Developer's Productivity App Isolation: for microservice, avoid DDoS Server Consolidation Debugging Capabilities Ease for multi-tenancy approach Benefits of using Docker Before going to the next chapter, please make sure you have install all the necessary software to run Docker on your local machine. Install Docker from here Reference : Docker Deep Dive from acloud.guru","title":"Introduction to Docker"},{"location":"containers/docker/docker-introduction/#docker","text":"","title":"Docker"},{"location":"containers/docker/docker-introduction/#what-is-docker","text":"Docker is a standalone software that can be installed on any computer to run containerized applications When we talk about Docker, its mostly we talk about Docker Engine. Docker has two main editions: Enterprise Edition (EE) Community Edition (CE) Docker has an open-source project called \"Moby\" to enable and accelerate software containerization.It's source code is available at github","title":"What is Docker"},{"location":"containers/docker/docker-introduction/#history-of-docker-company","text":"It's based out of San Francisco It was founded by Solomon Hykes Started as a PaaS provider called as dotCloud That time it leverages Linux Containers The internal tool that was used to manage containers was named as Docker And dotCloud was rebranded as Docker in 2013","title":"History of Docker Company"},{"location":"containers/docker/docker-introduction/#docker-images-vs-containers","text":"Docker images are read-only templates used to build containers. Containers are deployed instances created from those templates. Images and containers are closely related, and are essential in powering the Docker software platform.","title":"Docker Images vs Containers"},{"location":"containers/docker/docker-introduction/#docker-use-cases","text":"Dev/Prod Parity: When you want the code, environment, software version(s) everything same at both dev and prod Avoid Configuration headache Code Pipeline Management Developer's Productivity App Isolation: for microservice, avoid DDoS Server Consolidation Debugging Capabilities Ease for multi-tenancy approach","title":"Docker Use Cases"},{"location":"containers/docker/docker-introduction/#benefits-of-using-docker","text":"Before going to the next chapter, please make sure you have install all the necessary software to run Docker on your local machine. Install Docker from here Reference : Docker Deep Dive from acloud.guru","title":"Benefits of using Docker"},{"location":"cybersecurity/api-security/","text":"","title":"API Security"},{"location":"cybersecurity/common-security-concepts/","text":"","title":"Common Security Concepts"},{"location":"cybersecurity/cybersecurity-overview/","text":"Cybersecurity Overview Introduction Common Skill Sets for Security Engineer Common Security Questions Is DAST and PenTesting same? How SSL works? What is JWT security? What is the difference between SCA and SAST? Is Web Security and Application Security same? What is Security Champion? Vulnerability vs Exploit?","title":"Cybersecurity Overview"},{"location":"cybersecurity/cybersecurity-overview/#cybersecurity-overview","text":"","title":"Cybersecurity Overview"},{"location":"cybersecurity/cybersecurity-overview/#introduction","text":"","title":"Introduction"},{"location":"cybersecurity/cybersecurity-overview/#common-skill-sets-for-security-engineer","text":"","title":"Common Skill Sets for Security Engineer"},{"location":"cybersecurity/cybersecurity-overview/#common-security-questions","text":"","title":"Common Security Questions"},{"location":"cybersecurity/cybersecurity-overview/#is-dast-and-pentesting-same","text":"","title":"Is DAST and PenTesting same?"},{"location":"cybersecurity/cybersecurity-overview/#how-ssl-works","text":"","title":"How SSL works?"},{"location":"cybersecurity/cybersecurity-overview/#what-is-jwt-security","text":"","title":"What is JWT security?"},{"location":"cybersecurity/cybersecurity-overview/#what-is-the-difference-between-sca-and-sast","text":"","title":"What is the difference between SCA and SAST?"},{"location":"cybersecurity/cybersecurity-overview/#is-web-security-and-application-security-same","text":"","title":"Is Web Security and Application Security same?"},{"location":"cybersecurity/cybersecurity-overview/#what-is-security-champion","text":"","title":"What is Security Champion?"},{"location":"cybersecurity/cybersecurity-overview/#vulnerability-vs-exploit","text":"","title":"Vulnerability vs Exploit?"},{"location":"cybersecurity/network-security/","text":"","title":"Network Security"},{"location":"cybersecurity/application-security/cryptography/","text":"","title":"Cryptography"},{"location":"cybersecurity/application-security/sast/","text":"","title":"SAST"},{"location":"cybersecurity/application-security/sca/","text":"","title":"SCA"},{"location":"cybersecurity/application-security/secure-code-review/","text":"","title":"Secure Code Review"},{"location":"cybersecurity/application-security/secure-coding/","text":"","title":"Secure Coding"},{"location":"cybersecurity/application-security/threat-modeling/","text":"","title":"Threat Modeling"},{"location":"cybersecurity/web-security/owasp-top10/","text":"","title":"OWASP Top 10 2021"},{"location":"cybersecurity/web-security/web-security-concepts/","text":"","title":"Web Security Concepts"},{"location":"cybersecurity/web-security/web-security-overview/","text":"Web Security Overview Introduction There are high chances that you are using your desktop, laptop or tab etc. to open a page to get some information like: Search Google through browser Login to Social media like twitter, facebook or even web version of WhatsAPP YouTube to watch movie or songs Almost anything that you open through browser is actually a website. So, now you know what is a website. So, every website wil have unique address, that you type on browser. We call it url as well. From now onwards, we will interchangeably use website or url. What is Web Security I have few questions for you when you open a website. How would you make sure, you opened a correct website and not the fake one? You enter your personal data to the website, are you sure it's not hacked by someone else? How would you trust a website before entering your details? Just through https? Well, https is one of the many known ways to secure the website. Do you wonder what is https? Are you curious to know how the data is transferred or stored securely from attackers? If, you know the answers of above questions; it means you are good to go with web security basics and would make your journey easier while learning web security concepts. What we will cover under Web Security OWASP Top 10 2021 for Web Application Penetration Testing Tools for Web Security Minimal web security concepts DAST (Dynamic Application Security Testing)","title":"Web Security Overview"},{"location":"cybersecurity/web-security/web-security-overview/#web-security-overview","text":"","title":"Web Security Overview"},{"location":"cybersecurity/web-security/web-security-overview/#introduction","text":"There are high chances that you are using your desktop, laptop or tab etc. to open a page to get some information like: Search Google through browser Login to Social media like twitter, facebook or even web version of WhatsAPP YouTube to watch movie or songs Almost anything that you open through browser is actually a website. So, now you know what is a website. So, every website wil have unique address, that you type on browser. We call it url as well. From now onwards, we will interchangeably use website or url.","title":"Introduction"},{"location":"cybersecurity/web-security/web-security-overview/#what-is-web-security","text":"I have few questions for you when you open a website. How would you make sure, you opened a correct website and not the fake one? You enter your personal data to the website, are you sure it's not hacked by someone else? How would you trust a website before entering your details? Just through https? Well, https is one of the many known ways to secure the website. Do you wonder what is https? Are you curious to know how the data is transferred or stored securely from attackers? If, you know the answers of above questions; it means you are good to go with web security basics and would make your journey easier while learning web security concepts.","title":"What is Web Security"},{"location":"cybersecurity/web-security/web-security-overview/#what-we-will-cover-under-web-security","text":"OWASP Top 10 2021 for Web Application Penetration Testing Tools for Web Security Minimal web security concepts DAST (Dynamic Application Security Testing)","title":"What we will cover under Web Security"},{"location":"cybersecurity-study-plan/application-security-study-plan/","text":"","title":"Application Security Study Plan"},{"location":"cybersecurity-study-plan/aws-security-study-plan/","text":"AWS Security Study Plan I am making the study plan irrespective of job role under AWS Security category. It can be AWS Security Analyst, AWS Security Researcher or AWS Security Engineer or Cloud Security Operations Expert or Cloud Security Manager. So, check how much you can cover and close the checkbox. The more you close, the better candidate you are for the job role. Also, I assume you have already checked and comfortable with Common Security Skills study plan . This page is updated based on jassics/security-study-plan/aws-security-study-plan AWS Security Skills Learning and Checklist My only suggestion here is ask below 4 questions while learning each topic/concepts etc. What is this? (For example: What is security group) Why am I learning this? How I can implement this? How it will make secure or how to make it secure depending upon the topic or concept again? AWS Fundamentals I am listing only the topic name. How much you learn and comfortable with the concept or topic is upon you. And I will share the minimal link to make you up to the mark and you are free to learn anything more than this for better candidacy and experience. IAM One of the most important and must have skills for you. Try to understand IAM functionalities as much as possible. Understand IAM policy in 60 minutes: Youtube Understand IAM permissions Business Use Cases for IAM Security in IAM and STS IAM Access Analyzer User, Group, Roles and when to use when and don't forget to ask why this, why not that Custom policy vs AWS Managed Policy Cross-Account IAM policy to different roles, services, account Understand the IAM policy from security mindset. Why this, why not this? Service Control Policy Security Best Practices in IAM Amazon S3 KMS VPC Lambda AWS EKS and ECS AMAZON RDS For any AWS Service(s), please follow this strategy: What does this service does What problem it would solve for business Security Best Practices guide for AWS service. Ex: S3 security best practices, VPC security best practices. What permissions you should provide for each role to maintain the least privilege principle. How it is being used, can there be some security misconfiguration if not configured properly. If so, what are the security guideline to configure it. Is multi-tier, multi region required for this service How data at rest and data in transit can be achieved. Is logging required? If so, how are you going to log and what data and till what period Are we monitoring it? what's the reason for Yes or No Any specific security settings for that service like Bucket Policy for S3 bucket AWS Native Security core skills What I mean to say here is: 1. AWS core services related security skills 2. AWS Security services hands-on knowledge What are these? These are the core services: IAM, super important EC2 S3 VPC, I feel it as the toughest one so far RDS API Gateway Lambda ECS and EKS Below are AWS Core Security services that you should know and try hands-on as much as possible IAM Access Analyzer S3 Bucket Policy Security Group and NACL CloudTrail Config GuardDuty Inspector Macie Security Hub WAF and Shield (Optional, but if your job needs it; learn it) AWS KMS Secrets Manager Cognito AWS Security Whitepapers AWS has awesome lists of whitepapers related to AWS Security. We are adding few important one here. You can anytime check more for updated or new security whitepapers here And don't forget to bookmark AWS Security bulletin for new vulnerabilities news from here AWS Overview - One of the important whitepaper to understand an overview of AWS Introduction to AWS Security Whitepaper AWS Well-Architected Security Pillar Introduction to Security By Design AWS Well Architected Framework AWS Risk And Compliance Whitepaper AWS Security Checklist AWS HIPAA Compliance Whitepaper AWS Cloud Adoption Framework AWS Auditing Security Checklist AWS CIS Foundation benchmark AWS Security Incident Response Overview of AWS Lambda Security AWS KMS Best Practices Encrypting File Data with Amazon Elastic File System Security of AWS CloudHSM backups Security overview of AWS Lambda NIST Cybersecurity Framework in the AWS cloud NIST 800-144 Security and Privacy in Public Cloud Computing Security at the Edge: Core Principles AWS KMS Best Practices Security Overview of AWS Fargate Check your AWS Pentesting Skills Did you use pacu ? if not, start using it Try AWS CTF from flaws.cloud . Here is solution on YouTube as well Next level is at flaws2.cloud Try Well Architected Framework: Security Labs AWS Security Workshops Check other good tools like Prowler and ScoutSuite as well. Check your Knowledge against common security benchmark and frameworks. AWS CIS Benchmark CSA Cloud Matrix and STAR Framework NIST CSF for AWS ISO 27017 AWS Security Videos and Courses Check Awesome AWS Security repo for more details on book, videos, courses etc. AWS Security Interview Questions I have a separate repo for skills roadmap and interview questions . I will keep it updated time to time. You can star it or fork it . People to follow on twitter Abhay Bhargav Scott Piper Anant Srivastava Aakash Mahajan Sanjeev Jaiswal","title":"AWS Security Study Plan"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#aws-security-study-plan","text":"I am making the study plan irrespective of job role under AWS Security category. It can be AWS Security Analyst, AWS Security Researcher or AWS Security Engineer or Cloud Security Operations Expert or Cloud Security Manager. So, check how much you can cover and close the checkbox. The more you close, the better candidate you are for the job role. Also, I assume you have already checked and comfortable with Common Security Skills study plan . This page is updated based on jassics/security-study-plan/aws-security-study-plan","title":"AWS Security Study Plan"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#aws-security-skills-learning-and-checklist","text":"My only suggestion here is ask below 4 questions while learning each topic/concepts etc. What is this? (For example: What is security group) Why am I learning this? How I can implement this? How it will make secure or how to make it secure depending upon the topic or concept again?","title":"AWS Security Skills Learning and Checklist"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#aws-fundamentals","text":"I am listing only the topic name. How much you learn and comfortable with the concept or topic is upon you. And I will share the minimal link to make you up to the mark and you are free to learn anything more than this for better candidacy and experience.","title":"AWS Fundamentals"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#iam","text":"One of the most important and must have skills for you. Try to understand IAM functionalities as much as possible. Understand IAM policy in 60 minutes: Youtube Understand IAM permissions Business Use Cases for IAM Security in IAM and STS IAM Access Analyzer User, Group, Roles and when to use when and don't forget to ask why this, why not that Custom policy vs AWS Managed Policy Cross-Account IAM policy to different roles, services, account Understand the IAM policy from security mindset. Why this, why not this? Service Control Policy Security Best Practices in IAM","title":"IAM"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#amazon-s3","text":"","title":"Amazon S3"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#kms","text":"","title":"KMS"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#vpc","text":"","title":"VPC"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#lambda","text":"","title":"Lambda"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#aws-eks-and-ecs","text":"","title":"AWS EKS and ECS"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#amazon-rds","text":"","title":"AMAZON RDS"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#for-any-aws-services-please-follow-this-strategy","text":"What does this service does What problem it would solve for business Security Best Practices guide for AWS service. Ex: S3 security best practices, VPC security best practices. What permissions you should provide for each role to maintain the least privilege principle. How it is being used, can there be some security misconfiguration if not configured properly. If so, what are the security guideline to configure it. Is multi-tier, multi region required for this service How data at rest and data in transit can be achieved. Is logging required? If so, how are you going to log and what data and till what period Are we monitoring it? what's the reason for Yes or No Any specific security settings for that service like Bucket Policy for S3 bucket","title":"For any AWS Service(s), please follow this strategy:"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#aws-native-security-core-skills","text":"What I mean to say here is: 1. AWS core services related security skills 2. AWS Security services hands-on knowledge What are these? These are the core services: IAM, super important EC2 S3 VPC, I feel it as the toughest one so far RDS API Gateway Lambda ECS and EKS Below are AWS Core Security services that you should know and try hands-on as much as possible IAM Access Analyzer S3 Bucket Policy Security Group and NACL CloudTrail Config GuardDuty Inspector Macie Security Hub WAF and Shield (Optional, but if your job needs it; learn it) AWS KMS Secrets Manager Cognito","title":"AWS Native Security core skills"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#aws-security-whitepapers","text":"AWS has awesome lists of whitepapers related to AWS Security. We are adding few important one here. You can anytime check more for updated or new security whitepapers here And don't forget to bookmark AWS Security bulletin for new vulnerabilities news from here AWS Overview - One of the important whitepaper to understand an overview of AWS Introduction to AWS Security Whitepaper AWS Well-Architected Security Pillar Introduction to Security By Design AWS Well Architected Framework AWS Risk And Compliance Whitepaper AWS Security Checklist AWS HIPAA Compliance Whitepaper AWS Cloud Adoption Framework AWS Auditing Security Checklist AWS CIS Foundation benchmark AWS Security Incident Response Overview of AWS Lambda Security AWS KMS Best Practices Encrypting File Data with Amazon Elastic File System Security of AWS CloudHSM backups Security overview of AWS Lambda NIST Cybersecurity Framework in the AWS cloud NIST 800-144 Security and Privacy in Public Cloud Computing Security at the Edge: Core Principles AWS KMS Best Practices Security Overview of AWS Fargate","title":"AWS Security Whitepapers"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#check-your-aws-pentesting-skills","text":"Did you use pacu ? if not, start using it Try AWS CTF from flaws.cloud . Here is solution on YouTube as well Next level is at flaws2.cloud Try Well Architected Framework: Security Labs AWS Security Workshops Check other good tools like Prowler and ScoutSuite as well.","title":"Check your AWS Pentesting Skills"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#check-your-knowledge-against-common-security-benchmark-and-frameworks","text":"AWS CIS Benchmark CSA Cloud Matrix and STAR Framework NIST CSF for AWS ISO 27017","title":"Check your Knowledge against common security benchmark and frameworks."},{"location":"cybersecurity-study-plan/aws-security-study-plan/#aws-security-videos-and-courses","text":"Check Awesome AWS Security repo for more details on book, videos, courses etc.","title":"AWS Security Videos and Courses"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#aws-security-interview-questions","text":"I have a separate repo for skills roadmap and interview questions . I will keep it updated time to time. You can star it or fork it .","title":"AWS Security Interview Questions"},{"location":"cybersecurity-study-plan/aws-security-study-plan/#people-to-follow-on-twitter","text":"Abhay Bhargav Scott Piper Anant Srivastava Aakash Mahajan Sanjeev Jaiswal","title":"People to follow on twitter"},{"location":"cybersecurity-study-plan/azure-security-study-plan/","text":"","title":"Azure Security Study Plan"},{"location":"cybersecurity-study-plan/common-skills-study-plan/","text":"","title":"Common Security Study Plan"},{"location":"cybersecurity-study-plan/devsecops-study-plan/","text":"","title":"DevSecOps Study Plan"},{"location":"cybersecurity-study-plan/docker-security-study-plan/","text":"","title":"Docker Security Study Plan"},{"location":"cybersecurity-study-plan/gcp-security-study-plan/","text":"","title":"GCP Security Study Plan"},{"location":"cybersecurity-study-plan/kubernetes-security-study-plan/","text":"","title":"Kubernetes Security Study Plan"},{"location":"cybersecurity-study-plan/network-security-study-plan/","text":"","title":"Network Security Study Plan"},{"location":"cybersecurity-study-plan/python-for-security-study-plan/","text":"","title":"Python for Security Study Plan"},{"location":"cybersecurity-study-plan/web-security-testing-study-plan/","text":"","title":"Web Security Study Plan"},{"location":"devops/ansible/","text":"","title":"Ansible"},{"location":"devops/cloudformation/","text":"","title":"CloudFormation"},{"location":"devops/devops-introduction/","text":"","title":"Understanding DevOps"},{"location":"devops/pulumi/","text":"","title":"Pulumi"},{"location":"devops/terraform/","text":"","title":"Terraform"},{"location":"devsecops/compliance-as-code/","text":"","title":"Compliance as a Code"},{"location":"devsecops/dast-cicd/","text":"","title":"DAST in CI/CD Pipeline"},{"location":"devsecops/devsecops-fundamentals/","text":"","title":"DevSecOps Fundamentals"},{"location":"devsecops/devsecops-maturity/","text":"","title":"DevSecOps Maturity Model"},{"location":"devsecops/sca-cicd/","text":"","title":"SCA in CI/CD Pipeline"},{"location":"devsecops/sdl-cicd/","text":"","title":"SDL in CI/CD Pipeline"},{"location":"devsecops/vulnerability-management/","text":"","title":"Automated Vulnerability Management"},{"location":"grc/data-privacy/","text":"","title":"Data Privacy"},{"location":"grc/gdpr/","text":"","title":"GDPR"},{"location":"grc/grc-overview/","text":"GRC (Governance, Risk and Compliance) Overview","title":"GRC Overview"},{"location":"grc/grc-overview/#grc-governance-risk-and-compliance-overview","text":"","title":"GRC (Governance, Risk and Compliance) Overview"},{"location":"grc/iso27k1/","text":"","title":"ISO/IEC 27001:2022"},{"location":"grc/nist-csf/","text":"","title":"NIST CSF"},{"location":"grc/nist-rmf/","text":"","title":"NIST RMF"},{"location":"miscellaneous/git-basics/","text":"Git Essentials explained step by step","title":"Git Essentials with Examples"},{"location":"miscellaneous/git-basics/#git-essentials-explained-step-by-step","text":"","title":"Git Essentials explained step by step"},{"location":"miscellaneous/linux-commands/","text":"Useful Linux Commands Warm up commands man man who who : display who is logged in who -b : who -q : who -r : who -u : who am i : whoami whoami : displays effective username id id : id -u : id -un : id -p :","title":"Linux Commands"},{"location":"miscellaneous/linux-commands/#useful-linux-commands","text":"","title":"Useful Linux Commands"},{"location":"miscellaneous/linux-commands/#warm-up-commands","text":"","title":"Warm up commands"},{"location":"miscellaneous/linux-commands/#man","text":"man","title":"man"},{"location":"miscellaneous/linux-commands/#who","text":"who : display who is logged in who -b : who -q : who -r : who -u : who am i :","title":"who"},{"location":"miscellaneous/linux-commands/#whoami","text":"whoami : displays effective username","title":"whoami"},{"location":"miscellaneous/linux-commands/#id","text":"id : id -u : id -un : id -p :","title":"id"},{"location":"miscellaneous/regular-expression/","text":"","title":"Regular Expression Essentials"},{"location":"miscellaneous/vim-essentials/","text":"ViM for Everyone","title":"ViM for Everyone"},{"location":"miscellaneous/vim-essentials/#vim-for-everyone","text":"","title":"ViM for Everyone"},{"location":"python-track/learning-python/","text":"","title":"Learning Python"},{"location":"python-track/python-for-automation/","text":"","title":"Python for Automation"},{"location":"python-track/python-for-aws/","text":"","title":"Python for AWS"},{"location":"python-track/python-for-cybersecurity/","text":"","title":"Python for Cybersecurity"},{"location":"python-track/python-for-devops/","text":"","title":"Python for DevOps"},{"location":"python-track/python-track-overview/","text":"Welcome to Python Track Congratulations! You made a good choice of learning Python. You can do almost any online work using Python. If you don't know what is Python and why, where it is used and how. Then you should watch this YouTube video: If you are looking for which books you need to learn for Python basics, check this video: Confused which IDE you should use for Python Programming? You should watch this video then: Python Track Python Essentials Python for AWS Python for Cybersecurity Python for DevOps Python for Automation","title":"Python Track Introduction"},{"location":"python-track/python-track-overview/#welcome-to-python-track","text":"Congratulations! You made a good choice of learning Python. You can do almost any online work using Python. If you don't know what is Python and why, where it is used and how. Then you should watch this YouTube video: If you are looking for which books you need to learn for Python basics, check this video: Confused which IDE you should use for Python Programming? You should watch this video then:","title":"Welcome to Python Track"},{"location":"python-track/python-track-overview/#python-track","text":"Python Essentials Python for AWS Python for Cybersecurity Python for DevOps Python for Automation","title":"Python Track"},{"location":"security-presentations/","text":"Security Presentations Cloud Security Cloud Security 101 Pentesting AWS Penetration Testing Application Security Threat Modeling Hands-On Container Security DevSecOps Python for Security Track Python(Boto) for AWS Python for Web Security - Beginner Common Security Awareness Slides Social Engineering Basics Cybersecurity Roadmap for Beginners How to Build a Career in Cybersecurity","title":"Security Presentation Lists"},{"location":"security-presentations/#security-presentations","text":"","title":"Security Presentations"},{"location":"security-presentations/#cloud-security","text":"Cloud Security 101 Pentesting AWS","title":"Cloud Security"},{"location":"security-presentations/#penetration-testing","text":"","title":"Penetration Testing"},{"location":"security-presentations/#application-security","text":"Threat Modeling Hands-On","title":"Application Security"},{"location":"security-presentations/#container-security","text":"","title":"Container Security"},{"location":"security-presentations/#devsecops","text":"","title":"DevSecOps"},{"location":"security-presentations/#python-for-security-track","text":"Python(Boto) for AWS Python for Web Security - Beginner","title":"Python for Security Track"},{"location":"security-presentations/#common-security-awareness-slides","text":"Social Engineering Basics Cybersecurity Roadmap for Beginners How to Build a Career in Cybersecurity","title":"Common Security Awareness Slides"},{"location":"security-presentations/application-security/threat-modeling-handson/","text":"","title":"Threat Modeling Hands-On"},{"location":"security-presentations/cloud-security/cloud-security-101/","text":"Cloud Security 101 from Sanjeev Kumar Jaiswal","title":"Cloud Security 101"},{"location":"security-presentations/cloud-security/penetration-testing-aws/","text":"Penetration Testing AWS from Sanjeev Kumar Jaiswal","title":"Penetration Testing AWS"},{"location":"security-presentations/common-security-presentations/cybersecurity-roadmap-for-beginners/","text":"Cybersecurity Roadmap for Beginners from Sanjeev Kumar Jaiswal","title":"Cybersecurity Roadmap for Beginners"},{"location":"security-presentations/common-security-presentations/how-to-build-a-career-in-cybersecurity/","text":"How to build career in Cybersecurity from Sanjeev Kumar Jaiswal","title":"How to Build a Career in Cybersecurity"},{"location":"security-presentations/common-security-presentations/social-engineering-basics/","text":"Social Engineering Basics from Sanjeev Kumar Jaiswal","title":"Social Engineering Basics"},{"location":"security-presentations/python-track/python-for-aws/","text":"Python3 (boto3) for aws from Sanjeev Kumar Jaiswal","title":"Python for AWS"},{"location":"security-presentations/python-track/python-for-web-security/","text":"Python for web security - beginner from Sanjeev Kumar Jaiswal","title":"Python for Web Security"}]}